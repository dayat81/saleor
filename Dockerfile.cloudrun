# Saleor Docker configuration optimized for Google Cloud Run
# This extends the base Dockerfile with Cloud Run specific optimizations

### Build and install packages
FROM python:3.12 AS build-python

RUN apt-get -y update \
  && apt-get install -y gettext \
  # Cleanup apt cache
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
WORKDIR /app
RUN --mount=type=cache,mode=0755,target=/root/.cache/pip pip install poetry==2.1.1
RUN poetry config virtualenvs.create false
COPY poetry.lock pyproject.toml /app/
RUN --mount=type=cache,mode=0755,target=/root/.cache/pypoetry poetry install --only=main

### Final image
FROM python:3.12-slim

# Create non-root user
RUN groupadd -r saleor && useradd -r -g saleor saleor

# Install runtime dependencies
RUN apt-get update \
  && apt-get install -y \
  # Pillow dependencies
  libffi8 \
  libgdk-pixbuf2.0-0 \
  liblcms2-2 \
  libopenjp2-7 \
  libssl3 \
  libtiff6 \
  libwebp7 \
  # PostgreSQL client
  libpq5 \
  # Required by celery[sqs] for AWS SQS support
  libcurl4 \
  # MIME type support
  shared-mime-info \
  mime-support \
  # Cloud Run health check utilities
  curl \
  # Process management for graceful shutdown
  dumb-init \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# Create application directories
RUN mkdir -p /app/media /app/static \
  && chown -R saleor:saleor /app/

# Copy Python packages and binaries from build stage
COPY --from=build-python /usr/local/lib/python3.12/site-packages/ /usr/local/lib/python3.12/site-packages/
COPY --from=build-python /usr/local/bin/ /usr/local/bin/

# Copy application code
COPY . /app
WORKDIR /app

# Set file ownership
RUN chown -R saleor:saleor /app

# Collect static files
ARG STATIC_URL
ENV STATIC_URL=${STATIC_URL:-/static/}
RUN SECRET_KEY=dummy STATIC_URL=${STATIC_URL} python3 manage.py collectstatic --no-input

# Cloud Run specific environment variables
ENV PORT=8000
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV WORKERS=2

# Cloud Run requires listening on 0.0.0.0 and the PORT environment variable
EXPOSE ${PORT}

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:${PORT}/health/ || exit 1

# Container labels for Cloud Run
LABEL org.opencontainers.image.title="saleor/saleor-cloudrun" \
  org.opencontainers.image.description="Saleor e-commerce platform optimized for Google Cloud Run" \
  org.opencontainers.image.url="https://saleor.io/" \
  org.opencontainers.image.source="https://github.com/saleor/saleor" \
  org.opencontainers.image.authors="Saleor Commerce (https://saleor.io)" \
  org.opencontainers.image.licenses="BSD-3-Clause" \
  cloud.google.com/service="saleor"

# Switch to non-root user
USER saleor

# Use dumb-init for proper signal handling in containers
ENTRYPOINT ["dumb-init", "--"]

# Optimized uvicorn configuration for Cloud Run
CMD ["uvicorn", "saleor.asgi:application", \
     "--host=0.0.0.0", \
     "--port=${PORT}", \
     "--workers=${WORKERS}", \
     "--lifespan=off", \
     "--ws=none", \
     "--no-server-header", \
     "--no-access-log", \
     "--timeout-keep-alive=75", \
     "--timeout-graceful-shutdown=30", \
     "--limit-max-requests=1000", \
     "--limit-concurrency=200"]